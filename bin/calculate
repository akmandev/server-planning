#!/usr/bin/env php
<?php

require __DIR__ . '/../vendor/autoload.php';

use OzanAkman\ServerPlanner\Calculator;
use OzanAkman\ServerPlanner\Resources;
use OzanAkman\ServerPlanner\ServerType;
use OzanAkman\ServerPlanner\VirtualMachine;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

define('DATA_PATH', __DIR__ . '/../data');

(new Application('calculate', '1.0.0'))
    ->register('calculate')
    ->setCode(function (InputInterface $input, OutputInterface $output) {
        $output->writeln([
            'Server Resource Calculator',
            '==========================',
            '',
        ]);
        
        $serverTypeComponents = json_decode(file_get_contents(DATA_PATH . '/ServerType.json'));
        $serverTypeResources = new Resources(
            $serverTypeComponents->cpu,
            $serverTypeComponents->ram,
            $serverTypeComponents->hdd
        );
        $serverType = new ServerType($serverTypeResources);
        
        $virtualMachineComponents = json_decode(file_get_contents(DATA_PATH . '/VirtualMachines.json'));
        $virtualMachines = [];
        
        foreach ($virtualMachineComponents as $component) {
            $virtualMachines[] = new VirtualMachine(
                new Resources(
                    $component->cpu,
                    $component->ram,
                    $component->hdd
                )
            );
        }
        
        $result = (new Calculator())->calculate($serverType, $virtualMachines);
        
        $output->writeln(
            sprintf(
                "{%s} Servers needed for %s Virtual Machines",
                $result,
                count($virtualMachines)
            )
        );
    })
    ->getApplication()
    ->setDefaultCommand('calculate', true)
    ->run();
